{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport signup from \"./telas/signup\";\nimport login from \"./telas/login\";\nimport telaCentral from \"./telas/telaCentral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var Stack = createNativeStackNavigator();\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: login,\n            options: {\n              headerTransparent: true,\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Signup\",\n            component: signup,\n            options: {\n              headerTransparent: true,\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"TelaCentral\",\n            component: telaCentral,\n            options: {\n              headerTransparent: true,\n              headerShown: false\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#cbf2d6'\n  },\n  titulo: {\n    fontSize: 30,\n    textAlign: 'center',\n    margin: 10,\n    color: '#0c0f0d'\n  },\n  input: {\n    width: '90%',\n    backgroundColor: '#fff',\n    padding: 15,\n    marginBottom: 10\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '90%'\n  },\n  userBtn: {\n    backgroundColor: '#070a08',\n    padding: 15,\n    width: '45%'\n  },\n  btnTxt: {\n    fontSize: 18,\n    textAlign: 'center',\n    color: '#fff'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Jhonatan/Documents/GitHub/AteQponto/ateQponto/App.js"],"names":["React","Component","NavigationContainer","createNativeStackNavigator","signup","login","telaCentral","App","Stack","headerTransparent","headerShown","styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","titulo","fontSize","textAlign","margin","color","input","width","padding","marginBottom","btnContainer","flexDirection","userBtn","btnTxt"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,WAAP;;;;IAGMC,G;;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAMC,KAAK,GAAGL,0BAA0B,EAAxC;AAEA,aACI,KAAC,mBAAD;AAAA,kBACE,MAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAC,OAAlC;AAAA,qBACE,KAAC,KAAD,CAAO,MAAP;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,SAAS,EAAEE,KAFb;AAGE,YAAA,OAAO,EAAE;AACPI,cAAAA,iBAAiB,EAAC,IADX;AAEPC,cAAAA,WAAW,EAAC;AAFL;AAHX,YADF,EASE,KAAC,KAAD,CAAO,MAAP;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAEN,MAFb;AAGE,YAAA,OAAO,EAAE;AACPK,cAAAA,iBAAiB,EAAC,IADX;AAEPC,cAAAA,WAAW,EAAC;AAFL;AAHX,YATF,EAiBE,KAAC,KAAD,CAAO,MAAP;AACE,YAAA,IAAI,EAAC,aADP;AAEE,YAAA,SAAS,EAAEJ,WAFb;AAGE,YAAA,OAAO,EAAE;AACPG,cAAAA,iBAAiB,EAAC,IADX;AAEPC,cAAAA,WAAW,EAAC;AAFL;AAHX,YAjBF;AAAA;AADF,QADJ;AA+BD;;;;EAnCeT,S;;AAsClB,IAAMU,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,KAAK,EAAE;AAJD,GAPuB;AAa/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELP,IAAAA,eAAe,EAAE,MAFZ;AAGLQ,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,YAAY,EAAE;AAJT,GAbwB;AAmB/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,aAAa,EAAE,KADH;AAEZZ,IAAAA,cAAc,EAAE,eAFJ;AAGZQ,IAAAA,KAAK,EAAE;AAHK,GAnBiB;AAyB/BK,EAAAA,OAAO,EAAE;AACPZ,IAAAA,eAAe,EAAE,SADV;AAEPQ,IAAAA,OAAO,EAAE,EAFF;AAGPD,IAAAA,KAAK,EAAE;AAHA,GAzBsB;AA8B/BM,EAAAA,MAAM,EAAE;AACNX,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,SAAS,EAAE,QAFL;AAGNE,IAAAA,KAAK,EAAE;AAHD;AA9BuB,CAAlB,CAAf;AAsCA,eAAehB,GAAf","sourcesContent":["//DESENVOLVIDO PELA EQUIPE MAPA DO CRIME - TCC(USC)\r\nimport React, { Component } from 'react';\r\nimport { StatusBar, StyleSheet, Text, View, TextInput, TouchableOpacity, Alert, } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport signup from './telas/signup';\r\nimport login from './telas/login';\r\nimport telaCentral from './telas/telaCentral';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const Stack = createNativeStackNavigator();\r\n\r\n    return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName='Login'>\r\n            <Stack.Screen\r\n              name='Login'\r\n              component={login}\r\n              options={{\r\n                headerTransparent:true,\r\n                headerShown:false,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name='Signup'\r\n              component={signup}\r\n              options={{\r\n                headerTransparent:true,\r\n                headerShown:false,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name='TelaCentral'\r\n              component={telaCentral}\r\n              options={{\r\n                headerTransparent:true,\r\n                headerShown:false,\r\n              }}\r\n            />            \r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#cbf2d6',\r\n  },\r\n  titulo: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    margin: 10,\r\n    color: '#0c0f0d',\r\n  },\r\n  input: {\r\n    width: '90%',\r\n    backgroundColor: '#fff',\r\n    padding: 15,\r\n    marginBottom: 10,\r\n  },\r\n  btnContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n\r\n  },\r\n  userBtn: {\r\n    backgroundColor: '#070a08',\r\n    padding: 15,\r\n    width: '45%',\r\n  },\r\n  btnTxt: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n\r\n  }\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}